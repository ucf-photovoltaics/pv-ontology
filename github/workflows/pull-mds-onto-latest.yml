name: Pull Latest MDS-Onto from Bitbucket

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  download_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 PyGithub packaging

      - name: Run script to pull latest MDS-Onto
        run: python scripts/pull_mds_onto_latest.py
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      # --- ADD THESE NEW STEPS TO HANDLE PULL BEFORE PUSH ---
      - name: Configure Git for merge/rebase
        run: |
          git config user.name "TheAlgoDev"
          git config user.email "brent.thompson@ucf.edu"
          git pull --rebase origin main # Or master, or your TARGET_BRANCH
          # The --rebase flag is generally preferred in CI/CD to maintain a linear history.
          # If you prefer merge commits, use 'git pull origin main' instead.

      - name: Check for changes and push
        id: push_changes # Add an ID to the step if you want to reference it later
        run: |
          # The Python script already handled the add/commit.
          # We just need to ensure the push happens.
          # We also check if there are changes again, in case the rebase introduced conflicts
          # or if no actual changes were made to the file content.
          if ! git diff --quiet HEAD; then # Check if there are uncommitted changes or if rebase caused changes
            echo "Changes detected after rebase. Pushing..."
            git push
          else
            echo "No new changes or changes integrated by rebase. Skipping push."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # Ensure token is available for git push
